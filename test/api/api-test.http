# 此文件已重构为模块化测试套件
# 
# 新的测试结构请参考:
# - README.http              # 主入口和快速检查
# - common/health.http       # 健康检查
# - user/simple-crud.http    # 简化CRUD测试
# - user/crud.http           # 完整CRUD测试
# - user/validation.http     # 验证测试
# - user/boundary.http       # 边界测试
# - user/performance.http    # 性能测试
# - API_TESTING.md          # 详细文档

@hostname = localhost
@port = 8080
@baseUrl = http://{{hostname}}:{{port}}
@apiBase = {{baseUrl}}/api/v1

### 快速健康检查
GET {{baseUrl}}/health

### 快速用户API测试
GET {{apiBase}}/users

### 创建测试用户
POST {{apiBase}}/users
Content-Type: application/json

{
  "name": "快速测试用户",
  "email": "3@example.com",
  "password": "password123"
}

> {%
  client.test("提取用户ID", () => {
    client.assert(response.status === 201, "创建请求成功");
    client.assert(response.body.data && response.body.data.id, "响应中包含用户ID");
    client.global.set("userId", response.body.data.id);
    client.log("已设置 userId: " + client.global.get("userId"));
    client.log("完整响应: " + JSON.stringify(response.body));
  });
%}

### 删除测试用户
DELETE {{apiBase}}/users/{{userId}}




